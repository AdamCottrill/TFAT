# Generated by Django 2.2.10 on 2020-02-19 21:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_database', models.CharField(max_length=250)),
                ('path', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Master Database',
            },
        ),
        migrations.CreateModel(
            name='JoePublic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=15)),
                ('last_name', models.CharField(max_length=50)),
                ('initial', models.CharField(blank=True, max_length=5, null=True)),
                ('address1', models.CharField(blank=True, max_length=50, null=True)),
                ('address2', models.CharField(blank=True, max_length=50, null=True)),
                ('town', models.CharField(blank=True, max_length=50, null=True)),
                ('province', models.CharField(blank=True, choices=[('ON', 'Ontario'), ('AB', 'Alberta'), ('BC', 'British Columbia'), ('MB', 'Manitoba'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NS', 'Nova Scotia'), ('NT', 'Northwest Territories'), ('NU', 'Nunavut'), ('PE', 'Prince Edward Island'), ('QC', 'Quebec'), ('SK', 'Saskatchewan'), ('YT', 'Yukon'), ('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=12, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=7, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('affiliation', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Recovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recovery_date', models.DateField(blank=True, null=True)),
                ('date_flag', models.IntegerField(choices=[(2, 'Derived'), (0, 'Unknown'), (1, 'Reported')], default=1, verbose_name='Date Flag')),
                ('general_location', models.CharField(blank=True, max_length=200, null=True, verbose_name='General Location')),
                ('specific_location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Specific Location')),
                ('dd_lat', models.FloatField(blank=True, null=True)),
                ('dd_lon', models.FloatField(blank=True, null=True)),
                ('latlon_flag', models.IntegerField(choices=[(2, 'Derived'), (0, 'Unknown'), (1, 'Reported')], default=1, verbose_name='Spatial Flag')),
                ('spatial_followup', models.BooleanField(default=False)),
                ('flen', models.IntegerField(blank=True, null=True, verbose_name='Fork Length')),
                ('tlen', models.IntegerField(blank=True, null=True, verbose_name='Total Length')),
                ('rwt', models.IntegerField(blank=True, null=True, verbose_name='Round Weight')),
                ('girth', models.IntegerField(blank=True, null=True, verbose_name='Girth')),
                ('sex', models.CharField(blank=True, choices=[('1', 'Male'), ('3', 'Hermaphrodite'), ('9', 'Unknown'), ('2', 'Female')], default='9', max_length=3, null=True, verbose_name='Sex')),
                ('clipc', models.CharField(blank=True, max_length=5, null=True, verbose_name='Clip Code')),
                ('tagid', models.CharField(db_index=True, max_length=20)),
                ('_tag_origin', models.CharField(choices=[('10', 'Lakehead University'), ('98', 'Other'), ('24', 'CORA'), ('05', 'University of Toronto'), ('20', 'USGS'), ('09', 'State of Minnesota'), ('07', 'State of Pennsylvania'), ('13', 'Ontario Hydro'), ('19', 'USFWS'), ('02', 'New York State'), ('25', 'AOFRC'), ('11', 'Sir Sandford Fleming College'), ('06', 'State of Ohio'), ('08', 'Royal Ontario Museum'), ('26', 'GLLFAS'), ('01', 'Ontario Ministry of Natural Resources'), ('03', 'State of Michigan'), ('99', 'Unknown'), ('12', 'Private Club'), ('04', 'University of Guelph')], db_column='tag_origin', db_index=True, default='01', max_length=3, verbose_name='Tag Origin')),
                ('_tag_position', models.CharField(choices=[('6', 'Jaw'), ('8', 'Anal'), ('4', 'Abdominal Insertion'), ('2', 'Between Dorsal'), ('5', 'Flesh of Back'), ('1', 'Anterior Dorsal'), ('3', 'Posterior Dorsal'), ('7', 'Snout'), ('9', 'Unknown')], db_column='tag_position', db_index=True, default='1', max_length=3, verbose_name='Tag Position')),
                ('_tag_type', models.CharField(choices=[('B', 'Metal Livestock'), ('1', 'Streamer'), ('6', 'Coded Wire'), ('7', 'Strip Vinyl  '), ('2', 'Tubular Vinyl'), ('A', 'Internal (Radio)'), ('5', 'Anchor'), ('8', 'Secure Tie'), ('C', 'Cinch'), ('P', 'PIT tag'), ('3', 'Circular Strap Jaw '), ('4', 'Butt End Jaw ')], db_column='tag_type', db_index=True, default='1', max_length=3, verbose_name='Tag Type')),
                ('_tag_colour', models.CharField(choices=[('3', 'Red'), ('5', 'Orange'), ('7', 'White'), ('4', 'Green'), ('1', 'Colourless'), ('2', 'Yellow'), ('6', 'Silver'), ('9', 'Unknown')], db_column='tag_colour', db_index=True, default='2', max_length=3, verbose_name='Tag Colour')),
                ('tagdoc', models.CharField(db_index=True, default='25012', max_length=6, verbose_name='TAGDOC')),
                ('tag_removed', models.BooleanField(default=False)),
                ('fate', models.CharField(blank=True, choices=[('R', 'Released'), ('K', 'Killed')], default='R', max_length=3, null=True, verbose_name='Fate')),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('lake', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='recoveries', to='common.Lake')),
            ],
            options={
                'ordering': ['tagdoc', 'tagid'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateTimeField(blank=True, null=True, verbose_name='Report Date')),
                ('date_flag', models.IntegerField(choices=[(2, 'Derived'), (0, 'Unknown'), (1, 'Reported')], default=0, verbose_name='Date Flag')),
                ('reporting_format', models.CharField(choices=[('dcr', 'DCR'), ('other', 'other'), ('verbal', 'verbal'), ('e-mail', 'e-mail'), ('letter', 'letter')], default='verbal', max_length=30, verbose_name='Report Format')),
                ('dcr', models.CharField(blank=True, max_length=15, null=True)),
                ('effort', models.CharField(blank=True, max_length=15, null=True)),
                ('associated_file', models.FileField(blank=True, null=True, upload_to='reports')),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('follow_up', models.BooleanField(default=False)),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Reported_By', to='tfat.JoePublic')),
            ],
            options={
                'verbose_name_plural': 'JoePublic',
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_code', models.IntegerField(unique=True)),
                ('common_name', models.CharField(max_length=40)),
                ('scientific_name', models.CharField(blank=True, max_length=50, null=True)),
                ('primary', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Species',
                'ordering': ['-primary', 'common_name'],
            },
        ),
        migrations.CreateModel(
            name='ReportFollowUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('status', models.PositiveIntegerField(choices=[(0, 'Not Requested'), (10, 'Requested'), (20, 'Intialized'), (30, 'Completed')], db_index=True, default=0, verbose_name='Tag Origin')),
                ('create_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followups', to='tfat.Report')),
            ],
        ),
        migrations.CreateModel(
            name='RecoveryLetter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.FileField(upload_to='tag_return_letters/')),
                ('zoom', models.IntegerField(blank=True, null=True, verbose_name='Map Zoom')),
                ('method', models.CharField(choices=[('custom_letter', 'Custom Letter'), ('tfat_template', 'TFAT Template')], default='tfat_template', max_length=30, verbose_name='Generated By')),
                ('recovery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recovery_letters', to='tfat.Recovery')),
            ],
        ),
        migrations.AddField(
            model_name='recovery',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Report', to='tfat.Report'),
        ),
        migrations.AddField(
            model_name='recovery',
            name='spc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recoveries', to='tfat.Species'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(db_index=True)),
                ('prj_cd', models.CharField(db_index=True, max_length=12)),
                ('prj_nm', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, editable=False)),
                ('dbase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tfat.Database')),
                ('lake', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='Projects', to='common.Lake')),
            ],
            options={
                'ordering': ['-year', 'prj_cd'],
            },
        ),
        migrations.AlterIndexTogether(
            name='recovery',
            index_together={('tagid', 'tagdoc', 'spc')},
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sam', models.CharField(max_length=5)),
                ('eff', models.CharField(max_length=3)),
                ('grp', models.CharField(max_length=3)),
                ('fish', models.CharField(max_length=10)),
                ('observation_date', models.DateField()),
                ('grid', models.CharField(max_length=4)),
                ('dd_lat', models.FloatField()),
                ('dd_lon', models.FloatField()),
                ('flen', models.IntegerField(blank=True, null=True)),
                ('tlen', models.IntegerField(blank=True, null=True)),
                ('rwt', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[('1', 'Male'), ('3', 'Hermaphrodite'), ('9', 'Unknown'), ('2', 'Female')], default='9', max_length=3, null=True, verbose_name='Sex')),
                ('clipc', models.CharField(blank=True, max_length=5, null=True)),
                ('tagid', models.CharField(db_index=True, max_length=20)),
                ('tagdoc', models.CharField(blank=True, db_index=True, max_length=6, null=True)),
                ('tagstat', models.CharField(blank=True, choices=[('A', 'Applied'), ('C', 'Existed on Capture')], db_index=True, default='C', max_length=4, null=True)),
                ('fate', models.CharField(blank=True, choices=[('R', 'Released'), ('K', 'Killed')], default='C', max_length=2, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Encounters', to='tfat.Project')),
                ('spc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tfat.Species')),
            ],
            options={
                'ordering': ['tagdoc', 'tagid', 'observation_date'],
                'index_together': {('tagid', 'tagdoc', 'spc')},
            },
        ),
    ]
